---
- name: Install dependencies
  package:
    name: "{{ node_exporter_dependencies }}"
    state: present

- name: Create the node_exporter group
  group:
    name: "{{ node_exporter_system_group }}"
    state: present
    system: true

---
##note: To handle destination directory where prometheus is supposed to be installed
# create directory for the prometheus and then extract components there because of:
# - 'unarchived' task does not create destination directory
# - prometheus archive contains directory
- name: Check prometheus is installed
  become: true
  file:
    path: "{{ otus_prometheus_path }}"
    mode: "{{ otus_prometheus_path_mode }}"
    owner: "{{ otus_prometheus_user_configuration.username }}"
    group: "{{ otus_prometheus_user_configuration.group }}"
    state: directory
  register: __otus_prometheus_installed

- name: Unarchive prometheus distribution
  when: __otus_prometheus_installed.changed
  become: true
  unarchive:
    src: "{{ otus_prometheus_archive_path }}"
    dest: "{{ otus_prometheus_path }}"
    owner: "{{ otus_prometheus_user_configuration.username }}"
    group: "{{ otus_prometheus_user_configuration.group }}"
    remote_src: true
    extra_opts: [--strip-components=1]  ##note: extract from internal directory at level 1
  no_log: "{{ otus_prometheus_no_log }}"

- name: "Ensure prometheus scripts are in '{{ otus_prometheus_bin_dir }}'"
  become: true
  file:
    path: "{{ otus_prometheus_bin_dir }}/{{ item }}"
    src: "{{ otus_prometheus_path }}/{{ item }}"
    state: link
  loop:
    - prometheus
    - promtool

- name: "Ensure prometheus console templates are in '{{ otus_prometheus_conf_dir }}'"
  become: true
  file:
    path: "{{ otus_prometheus_conf_dir }}/{{ item }}"
    src: "{{ otus_prometheus_path }}/{{ item }}"
    state: link
  loop:
    - console_libraries
    - consoles

- name: Get systemd version
  shell: systemctl --version | awk '$1 == "systemd" {print $2}'
  changed_when: false
  check_mode: false
  register: __otus_prometheus_systemd_version

- name: Ensure default config is absent
  become: true
  file:
    path: "{{ otus_prometheus_path }}/prometheus.yml"
    state: absent

- name: Configure prometheus
  become: true
  template:
    src: prometheus.yml.j2
    dest: "{{ otus_prometheus_conf_dir }}/prometheus.yml"
    backup: true
  register: __otus_prometheus_configuration

- name: Configure service
  become: true
  template:
    src: prometheus.service.j2
    dest: "{{ otus_prometheus_service_dir }}/{{ otus_prometheus_service_name }}.service"
    backup: false # ##note: prevent cluttering in systemd services directory
  register: __otus_prometheus_service_configuration


- name: Create the node_exporter user
  user:
    name: "{{ node_exporter_system_user }}"
    groups: "{{ node_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /

- name: Download node_exporter binary to local folder
  become: false
  get_url:
    url:
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    checksum: "sha256:{{ node_exporter_checksum }}"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: Unpack node_exporter binary
  become: false
  unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"
  delegate_to: localhost
  check_mode: false

- name: Create /usr/local/bin
  file:
    path: /usr/local/bin
    state: directory
    mode: 0755

- name: Propagate node_exporter binaries
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    mode: 0750
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
  notify: restart node_exporter
  when: not ansible_check_mode
